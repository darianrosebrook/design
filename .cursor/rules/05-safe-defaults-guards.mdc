---
description: Safe defaults, guard clauses, early returns
globs:
alwaysApply: false
---

# Safe Defaults & Guard Clauses

## Intent
Minimize null/undefined faults and nesting.

## Guidelines (language-agnostic)
- Prefer **guard clauses** at top of function to fail fast.
- Default parameter objects in signatures.
- Prefer **short-circuiting** / optional access / null-coalescing where supported.
- Loop defensively on possibly-empty collections.

## Acceptance
- No deep nesting introduced where guard clauses apply.
- Inputs validated at boundaries; failures are explicit and early.
