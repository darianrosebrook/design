// Slider primitive component styles
// Migrated from Tailwind to SCSS with design tokens

// Import generated token variables
@use './Slider.tokens.generated.scss' as sliderTokens;

// Include the generated variables mixin
@include sliderTokens.vars;

// Slider root container
.slider {
  position: var(--slider-slider-root-position);
  display: var(--slider-slider-root-display);
  width: var(--slider-slider-root-width);
  touch-action: var(--slider-slider-root-touchAction);
  align-items: var(--slider-slider-root-alignItems);
  user-select: var(--slider-slider-root-userSelect);

  // Disabled state
  &[data-disabled="true"] {
    opacity: var(--slider-slider-root-disabled-opacity);
  }

  // Vertical orientation
  &[data-orientation="vertical"] {
    height: var(--slider-slider-root-orientation-vertical-height);
    min-height: var(--slider-slider-root-orientation-vertical-minHeight);
    width: var(--slider-slider-root-orientation-vertical-width);
    flex-direction: var(--slider-slider-root-orientation-vertical-flexDirection);
  }
}

// Slider track container
.slider-track {
  background-color: var(--slider-slider-track-backgroundColor);
  position: var(--slider-slider-track-position);
  flex-grow: var(--slider-slider-track-flexGrow);
  overflow: var(--slider-slider-track-overflow);
  border-radius: var(--slider-slider-track-borderRadius);

  // Horizontal orientation (default)
  &[data-orientation="horizontal"] {
    height: var(--slider-slider-track-orientation-horizontal-height);
    width: var(--slider-slider-track-orientation-horizontal-width);
  }

  // Vertical orientation
  &[data-orientation="vertical"] {
    height: var(--slider-slider-track-orientation-vertical-height);
    width: var(--slider-slider-track-orientation-vertical-width);
  }
}

// Slider range (filled portion)
.slider-range {
  background-color: var(--slider-slider-range-backgroundColor);
  position: var(--slider-slider-range-position);

  // Horizontal orientation (default)
  &[data-orientation="horizontal"] {
    height: var(--slider-slider-range-orientation-horizontal-height);
  }

  // Vertical orientation
  &[data-orientation="vertical"] {
    width: var(--slider-slider-range-orientation-vertical-width);
  }
}

// Slider thumb (draggable handle)
.slider-thumb {
  display: var(--slider-slider-thumb-display);
  width: var(--slider-slider-thumb-width);
  height: var(--slider-slider-thumb-height);
  flex-shrink: var(--slider-slider-thumb-flexShrink);
  border-radius: var(--slider-slider-thumb-borderRadius);
  border: var(--slider-slider-thumb-border-width) var(--slider-slider-thumb-border-style) var(--slider-slider-thumb-border-color);
  background-color: var(--slider-slider-thumb-backgroundColor);
  box-shadow: var(--slider-slider-thumb-boxShadow);
  transition: var(--slider-slider-thumb-transitionProperties) var(--slider-slider-thumb-transition);
  outline: var(--slider-slider-thumb-outline);

  // Disabled state
  &[data-disabled="true"] {
    pointer-events: var(--slider-slider-thumb-disabled-pointerEvents);
    opacity: var(--slider-slider-thumb-disabled-opacity);
  }

  // Hover state
  &:hover {
    box-shadow: var(--slider-slider-thumb-states-hover-boxShadow);
  }

  // Focus visible state
  &:focus-visible {
    box-shadow: var(--slider-slider-thumb-states-focusVisible-boxShadow);
    outline: var(--slider-slider-thumb-states-focusVisible-outline);
  }
}
