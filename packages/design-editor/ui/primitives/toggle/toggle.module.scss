// Toggle component styles
// Migrated from Tailwind to SCSS with design tokens

.toggle {
  // Base toggle styles (equivalent to inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium hover:bg-muted hover:text-muted-foreground disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] outline-none transition-[color,box-shadow] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive whitespace-nowrap)
  display: inline-flex; // equivalent to inline-flex
  align-items: center; // equivalent to items-center
  justify-content: center; // equivalent to justify-center
  gap: 8px; // equivalent to gap-2
  border-radius: 6px; // equivalent to rounded-md
  font-size: 14px; // equivalent to text-sm
  font-weight: 500; // equivalent to font-medium
  white-space: nowrap; // equivalent to whitespace-nowrap
  outline: none; // equivalent to outline-none
  transition: color 150ms ease-in-out, box-shadow 150ms ease-in-out; // equivalent to transition-[color,box-shadow]

  // SVG icon styles (equivalent to [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0)
  svg {
    pointer-events: none; // equivalent to [&_svg]:pointer-events-none
    flex-shrink: 0; // equivalent to [&_svg]:shrink-0

    &:not([class*="size-"]) {
      width: 16px; // equivalent to size-4
      height: 16px;
    }
  }

  // Hover styles (equivalent to hover:bg-muted hover:text-muted-foreground)
  &:hover {
    background-color: hsl(var(--muted)); // equivalent to hover:bg-muted
    color: hsl(var(--muted-foreground)); // equivalent to hover:text-muted-foreground
  }

  // Active/on state (equivalent to data-[state=on]:bg-accent data-[state=on]:text-accent-foreground)
  &[data-state="on"] {
    background-color: hsl(var(--accent)); // equivalent to data-[state=on]:bg-accent
    color: hsl(var(--accent-foreground)); // equivalent to data-[state=on]:text-accent-foreground
  }

  // Focus visible styles (equivalent to focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px])
  &:focus-visible {
    border-color: hsl(var(--ring));
    box-shadow: 0 0 0 3px hsl(var(--ring) / 0.5);
  }

  // Invalid state (equivalent to aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive)
  &[aria-invalid="true"] {
    box-shadow: 0 0 0 3px hsl(var(--destructive) / 0.2);
    border-color: hsl(var(--destructive));

    .dark & {
      box-shadow: 0 0 0 3px hsl(var(--destructive) / 0.4);
    }
  }

  // Disabled state (equivalent to disabled:pointer-events-none disabled:opacity-50)
  &:disabled {
    pointer-events: none;
    opacity: 0.5;
  }
}

// Variant styles
.toggle--variant-default {
  // Default variant (equivalent to bg-transparent)
  background-color: transparent; // equivalent to bg-transparent
}

.toggle--variant-outline {
  // Outline variant (equivalent to border border-input bg-transparent shadow-xs hover:bg-accent hover:text-accent-foreground)
  border: 1px solid hsl(var(--input)); // equivalent to border border-input
  background-color: transparent; // equivalent to bg-transparent
  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05); // equivalent to shadow-xs

  // Override hover styles for outline variant
  &:hover {
    background-color: hsl(var(--accent)); // equivalent to hover:bg-accent
    color: hsl(var(--accent-foreground)); // equivalent to hover:text-accent-foreground
  }

  // Active/on state override for outline variant
  &[data-state="on"] {
    background-color: hsl(var(--accent));
    color: hsl(var(--accent-foreground));
  }
}

// Size variants
.toggle--size-default {
  // Default size (equivalent to h-9 px-2 min-w-9)
  height: 36px; // equivalent to h-9
  padding: 0 8px; // equivalent to px-2
  min-width: 36px; // equivalent to min-w-9
}

.toggle--size-sm {
  // Small size (equivalent to h-8 px-1.5 min-w-8)
  height: 32px; // equivalent to h-8
  padding: 0 6px; // equivalent to px-1.5
  min-width: 32px; // equivalent to min-w-8
}

.toggle--size-lg {
  // Large size (equivalent to h-10 px-2.5 min-w-10)
  height: 40px; // equivalent to h-10
  padding: 0 10px; // equivalent to px-2.5
  min-width: 40px; // equivalent to min-w-10
}