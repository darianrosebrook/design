// Spinner primitive component styles
// Migrated from Tailwind to SCSS with design tokens

// Import generated token variables
@use './Spinner.tokens.generated.scss' as spinnerTokens;

// Include the generated variables mixin

// Base spinner styles
.spinner {
  // Include the generated variables mixin within the component scope
  @include spinnerTokens.vars;

  color: var(--spinner-color);
  animation: var(--spinner-animation-iterationCount) var(--spinner-animation-timingFunction) var(--spinner-animation-duration) spin;
  flex-shrink: 0;

  // Size variants
  &--size-sm {
    width: var(--spinner-size-sm);
    height: var(--spinner-size-sm);
  }

  &--size-md {
    width: var(--spinner-size-md);
    height: var(--spinner-size-md);
  }

  &--size-lg {
    width: var(--spinner-size-lg);
    height: var(--spinner-size-lg);
  }

  &--size-xl {
    width: var(--spinner-size-xl);
    height: var(--spinner-size-xl);
  }
}

// Default size (md)
.spinner:not(&--size-sm):not(&--size-lg):not(&--size-xl) {
  width: var(--spinner-size-default);
  height: var(--spinner-size-default);
}

// Spin animation keyframes
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
