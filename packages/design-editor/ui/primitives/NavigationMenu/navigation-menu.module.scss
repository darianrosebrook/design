// NavigationMenu component styles
// Migrated from Tailwind to SCSS with design tokens

// Import generated token variables
@use './NavigationMenu.tokens.generated.scss' as navigationMenuTokens;

.navigationMenu {
  // Include the generated variables mixin within the component scope
  @include navigationMenuTokens.vars;

  // Include the generated variables mixin within the component scope
  // Base navigation menu styles (equivalent to group/navigation-menu relative flex max-w-max flex-1 items-center justify-center)
  position: var(--navigationMenu-container-position); // equivalent to relative
  display: var(--navigationMenu-container-display); // equivalent to flex
  max-width: var(--navigationMenu-container-maxWidth); // equivalent to max-w-max
  flex: var(--navigationMenu-container-flex); // equivalent to flex-1
  align-items: var(--navigationMenu-container-alignItems); // equivalent to items-center
  justify-content: var(--navigationMenu-container-justifyContent); // equivalent to justify-center
}

.navigationMenuList {
  // List container styles (equivalent to group flex flex-1 list-none items-center justify-center gap-1)
  display: var(--navigationMenu-list-display); // equivalent to flex
  flex: var(--navigationMenu-list-flex); // equivalent to flex-1
  list-style: var(--navigationMenu-list-listStyle); // equivalent to list-none
  align-items: var(--navigationMenu-list-alignItems); // equivalent to items-center
  justify-content: var(--navigationMenu-list-justifyContent); // equivalent to justify-center
  gap: var(--navigationMenu-list-gap); // equivalent to gap-1
}

.navigationMenuItem {
  // Item styles (equivalent to relative)
  position: relative; // equivalent to relative
}

.navigationMenuTrigger {
  // Trigger styles (equivalent to group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground disabled:pointer-events-none disabled:opacity-50 data-[state=open]:hover:bg-accent data-[state=open]:text-accent-foreground data-[state=open]:focus:bg-accent data-[state=open]:bg-accent/50 focus-visible:ring-ring/50 outline-none transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1)
  display: var(--navigationMenu-trigger-display); // equivalent to inline-flex
  height: var(--navigationMenu-trigger-height); // equivalent to h-9
  width: var(--navigationMenu-trigger-width); // equivalent to w-max
  align-items: var(--navigationMenu-trigger-alignItems); // equivalent to items-center
  justify-content: var(--navigationMenu-trigger-justifyContent); // equivalent to justify-center
  border-radius: var(--navigationMenu-trigger-borderRadius); // equivalent to rounded-md
  background-color: var(--navigationMenu-trigger-backgroundColor-default); // equivalent to bg-background
  padding: var(--navigationMenu-trigger-padding-vertical) var(--navigationMenu-trigger-padding-horizontal); // equivalent to px-4 py-2
  font-size: var(--navigationMenu-trigger-fontSize); // equivalent to text-sm
  font-weight: var(--navigationMenu-trigger-fontWeight); // equivalent to font-medium
  outline: none; // equivalent to outline-none
  transition: color var(--navigationMenu-trigger-transition-duration) var(--navigationMenu-trigger-transition-easing), box-shadow var(--navigationMenu-trigger-transition-duration) var(--navigationMenu-trigger-transition-easing); // equivalent to transition-[color,box-shadow]

  // Hover styles
  &:hover {
    background-color: var(--navigationMenu-trigger-states-hover-backgroundColor); // equivalent to hover:bg-accent
    color: var(--navigationMenu-trigger-states-hover-color); // equivalent to hover:text-accent-foreground
  }

  // Focus styles
  &:focus {
    background-color: var(--navigationMenu-trigger-states-focus-backgroundColor); // equivalent to focus:bg-accent
    color: var(--navigationMenu-trigger-states-focus-color); // equivalent to focus:text-accent-foreground
  }

  // Focus visible styles
  &:focus-visible {
    box-shadow: 0 0 0 3px hsl(var(--ring) / 0.5); // equivalent to focus-visible:ring-ring/50 focus-visible:ring-[3px]
    outline: 1px solid; // equivalent to focus-visible:outline-1
  }

  // Open state styles
  &[data-state="open"] {
    background-color: var(--navigationMenu-trigger-states-open-backgroundColor); // equivalent to data-[state=open]:bg-accent/50
    opacity: var(--navigationMenu-trigger-states-open-backgroundColor-opacity);

    &:hover,
    &:focus {
      background-color: var(--navigationMenu-trigger-states-hover-backgroundColor); // equivalent to data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent
      color: var(--navigationMenu-trigger-states-hover-color); // equivalent to data-[state=open]:text-accent-foreground
    }
  }

  // Disabled state
  &:disabled {
    pointer-events: none; // equivalent to disabled:pointer-events-none
    opacity: var(--navigationMenu-trigger-states-disabled-opacity); // equivalent to disabled:opacity-50
  }

  // Chevron icon styles
  .navigationMenuTriggerChevron {
    margin-left: var(--navigationMenu-trigger-chevron-marginLeft); // equivalent to ml-1
    width: var(--navigationMenu-trigger-chevron-size); // equivalent to size-3
    height: var(--navigationMenu-trigger-chevron-size);
    transition: transform var(--navigationMenu-trigger-chevron-transition-duration) var(--navigationMenu-trigger-chevron-transition-easing); // equivalent to transition duration-300

    // Rotation when open
    .group[data-state="open"] & {
      transform: var(--navigationMenu-trigger-chevron-transform-open); // equivalent to group-data-[state=open]:rotate-180
    }
  }
}

.navigationMenuContent {
  // Content styles - this is very complex with many animation classes
  position: var(--navigationMenu-content-position); // equivalent to md:absolute
  top: var(--navigationMenu-content-top); // equivalent to top-0
  left: var(--navigationMenu-content-left); // equivalent to left-0
  width: var(--navigationMenu-content-width); // equivalent to w-full md:w-auto
  padding: var(--navigationMenu-content-padding); // equivalent to p-2
  padding-right: var(--navigationMenu-content-paddingRight); // equivalent to pr-2.5

  // Animation classes (these would need to be defined in a global CSS file)
  // For now, we'll include the base styles

  // Viewport false styles (very complex - would need global CSS for group selectors)
  // These are complex group selectors that would be better handled globally
}

.navigationMenuViewport {
  // Viewport container styles
  position: var(--navigationMenu-viewport-position); // equivalent to absolute
  top: var(--navigationMenu-viewport-top); // equivalent to top-full
  left: var(--navigationMenu-viewport-left); // equivalent to left-0
  display: var(--navigationMenu-viewport-display); // equivalent to flex
  justify-content: var(--navigationMenu-viewport-justifyContent); // equivalent to justify-center
  z-index: var(--navigationMenu-viewport-zIndex); // equivalent to isolate z-50

  .navigationMenuViewportInner {
    // Inner viewport styles (equivalent to origin-top-center bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border shadow md:w-[var(--radix-navigation-menu-viewport-width)])
    transform-origin: var(--navigationMenu-viewport-inner-transformOrigin); // equivalent to origin-top-center
    background-color: var(--navigationMenu-viewport-inner-backgroundColor); // equivalent to bg-popover
    color: var(--navigationMenu-viewport-inner-color); // equivalent to text-popover-foreground
    position: var(--navigationMenu-viewport-inner-position); // equivalent to relative
    margin-top: var(--navigationMenu-viewport-inner-marginTop); // equivalent to mt-1.5
    height: var(--navigationMenu-viewport-inner-height); // equivalent to h-[var(--radix-navigation-menu-viewport-height)]
    width: var(--navigationMenu-viewport-inner-width); // equivalent to w-full
    overflow: var(--navigationMenu-viewport-inner-overflow); // equivalent to overflow-hidden
    border-radius: var(--navigationMenu-viewport-inner-borderRadius); // equivalent to rounded-md
    border: var(--navigationMenu-viewport-inner-border); // equivalent to border
    box-shadow: var(--navigationMenu-viewport-inner-boxShadow); // equivalent to shadow

    @media (min-width: 768px) {
      width: var(--navigationMenu-viewport-inner-width); // equivalent to md:w-[var(--radix-navigation-menu-viewport-width)]
    }
  }
}

.navigationMenuLink {
  // Link styles (equivalent to data-[active=true]:focus:bg-accent data-[active=true]:hover:bg-accent data-[active=true]:bg-accent/50 data-[active=true]:text-accent-foreground hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus-visible:ring-ring/50 [&_svg:not([class*='text-'])]:text-muted-foreground flex flex-col gap-1 rounded-sm p-2 text-sm transition-all outline-none focus-visible:ring-[3px] focus-visible:outline-1 [&_svg:not([class*='size-'])]:size-4)
  display: var(--navigationMenu-link-display); // equivalent to flex
  flex-direction: var(--navigationMenu-link-flexDirection); // equivalent to flex-col
  gap: var(--navigationMenu-link-gap); // equivalent to gap-1
  border-radius: var(--navigationMenu-link-borderRadius); // equivalent to rounded-sm
  padding: var(--navigationMenu-link-padding); // equivalent to p-2
  font-size: var(--navigationMenu-link-fontSize); // equivalent to text-sm
  transition: all var(--navigationMenu-link-transition-duration) var(--navigationMenu-link-transition-easing); // equivalent to transition-all
  outline: none; // equivalent to outline-none

  // SVG icon colors
  svg:not([class*="text-"]) {
    color: var(--navigationMenu-link-icon-color-default); // equivalent to [&_svg:not([class*='text-'])]:text-muted-foreground
  }

  // SVG icon sizes
  svg:not([class*="size-"]) {
    width: var(--navigationMenu-link-icon-size); // equivalent to [&_svg:not([class*='size-'])]:size-4
    height: var(--navigationMenu-link-icon-size);
  }

  // Hover styles
  &:hover {
    background-color: var(--navigationMenu-link-states-hover-backgroundColor); // equivalent to hover:bg-accent
    color: var(--navigationMenu-link-states-hover-color); // equivalent to hover:text-accent-foreground
  }

  // Focus styles
  &:focus {
    background-color: var(--navigationMenu-link-states-focus-backgroundColor); // equivalent to focus:bg-accent
    color: var(--navigationMenu-link-states-focus-color); // equivalent to focus:text-accent-foreground
  }

  // Focus visible styles
  &:focus-visible {
    box-shadow: 0 0 0 3px hsl(var(--ring) / 0.5); // equivalent to focus-visible:ring-ring/50 focus-visible:ring-[3px]
    outline: 1px solid; // equivalent to focus-visible:outline-1
  }

  // Active state styles
  &[data-active="true"] {
    background-color: var(--navigationMenu-link-states-active-backgroundColor); // equivalent to data-[active=true]:bg-accent/50
    color: var(--navigationMenu-link-states-active-color); // equivalent to data-[active=true]:text-accent-foreground
    opacity: var(--navigationMenu-link-states-active-backgroundColor-opacity);

    &:hover,
    &:focus {
      background-color: var(--navigationMenu-link-states-hover-backgroundColor); // equivalent to data-[active=true]:hover:bg-accent data-[active=true]:focus:bg-accent
    }
  }
}

.navigationMenuIndicator {
  // Indicator styles (equivalent to data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden)
  position: var(--navigationMenu-indicator-position); // equivalent to top-full (relative positioning)
  top: var(--navigationMenu-indicator-top); // equivalent to top-full
  z-index: var(--navigationMenu-indicator-zIndex); // equivalent to z-[1]
  display: var(--navigationMenu-indicator-display); // equivalent to flex
  height: var(--navigationMenu-indicator-height); // equivalent to h-1.5
  align-items: var(--navigationMenu-indicator-alignItems); // equivalent to items-end
  justify-content: var(--navigationMenu-indicator-justifyContent); // equivalent to justify-center
  overflow: var(--navigationMenu-indicator-overflow); // equivalent to overflow-hidden

  .navigationMenuIndicatorArrow {
    // Arrow styles (equivalent to bg-border relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm shadow-md)
    background-color: var(--navigationMenu-indicator-arrow-backgroundColor); // equivalent to bg-border
    position: var(--navigationMenu-indicator-arrow-position); // equivalent to relative
    top: var(--navigationMenu-indicator-arrow-top); // equivalent to top-[60%]
    height: var(--navigationMenu-indicator-arrow-size); // equivalent to h-2
    width: var(--navigationMenu-indicator-arrow-size); // equivalent to w-2
    transform: var(--navigationMenu-indicator-arrow-transform); // equivalent to rotate-45
    border-top-left-radius: var(--navigationMenu-indicator-arrow-borderTopLeftRadius); // equivalent to rounded-tl-sm
    box-shadow: var(--navigationMenu-indicator-arrow-boxShadow); // equivalent to shadow-md
  }
}