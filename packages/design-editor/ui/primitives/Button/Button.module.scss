// Button component styles
// Migrated from Tailwind to SCSS with semantic design tokens

// Import generated token variables
@use './Button.tokens.generated.scss' as buttonTokens;

// Base button styles (equivalent to Tailwind base classes)
.button {
  @include buttonTokens.vars;
  // Include the generated variables mixin within the component scope
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--semantic-spacing-gap-grid-small); // 8px
  white-space: nowrap;
  border-radius: var(--button-borderRadius);
  font-size: var(--button-fontSize);
  font-weight: var(--button-fontWeight);
  line-height: var(--button-lineHeight);
  transition: var(--semantic-motion-interaction-hover-duration) var(--semantic-motion-interaction-hover-easing);

  // SVG icon styles
  svg {
    pointer-events: none;
    width: var(--semantic-components-action-height-small); // 8px * 2
    height: var(--semantic-components-action-height-small); // 8px * 2
    flex-shrink: 0;

    &:not([class*="size-"]) {
      width: var(--semantic-components-action-height-small); // 8px * 2
      height: var(--semantic-components-action-height-small); // 8px * 2
    }
  }

  // Disabled state
  &:disabled {
    pointer-events: none;
    opacity: var(--semantic-opacity-disabled);
  }

  // Focus visible styles - equivalent to focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2
  &:focus-visible {
    outline: none;
    box-shadow: 0 0 0 2px #3b82f6, 0 0 0 4px #ffffff; // ring-2 blue-500, ring-offset-2 white
  }

  // Invalid state - equivalent to aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive
  &[aria-invalid="true"] {
    box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.2); // red-600 with 20% opacity
    border-color: #dc2626; // red-600

    .dark & {
      box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.4); // red-600 with 40% opacity
    }
  }
}

// Size variants
.button--size-default {
  height: var(--button-height-default);
  padding: var(--button-padding-vertical-default) var(--button-padding-horizontal-default);

  // Adjust padding when there's an SVG
  &:has(> svg) {
    padding-left: var(--semantic-components-action-padding-horizontal-small);
    padding-right: var(--semantic-components-action-padding-horizontal-small);
  }
}

.button--size-sm {
  height: var(--button-height-sm);
  border-radius: var(--button-borderRadius);
  gap: var(--semantic-components-action-gap-composite);
  padding: var(--button-padding-vertical-sm) var(--button-padding-horizontal-sm);

  // Adjust padding when there's an SVG
  &:has(> svg) {
    padding-left: calc(var(--semantic-components-action-padding-horizontal-small) - var(--semantic-spacing-gap-grid-small));
    padding-right: calc(var(--semantic-components-action-padding-horizontal-small) - var(--semantic-spacing-gap-grid-small));
  }
}

.button--size-lg {
  height: var(--button-height-lg);
  border-radius: var(--button-borderRadius);
  padding: var(--button-padding-vertical-lg) var(--button-padding-horizontal-lg);

  // Adjust padding when there's an SVG
  &:has(> svg) {
    padding-left: var(--semantic-components-action-padding-horizontal-default);
    padding-right: var(--semantic-components-action-padding-horizontal-default);
  }
}

.button--size-icon {
  width: var(--button-height-icon-default);
  height: var(--button-height-icon-default);
  padding: 0;
}

.button--size-icon-sm {
  width: var(--button-height-icon-sm);
  height: var(--button-height-icon-sm);
  padding: 0;
}

.button--size-icon-lg {
  width: var(--button-height-icon-lg);
  height: var(--button-height-icon-lg);
  padding: 0;
}

// Variant styles
.button--variant-default {
  background-color: var(--button-variants-default-backgroundColor);
  color: var(--button-variants-default-color);

  &:hover {
    background-color: var(--button-variants-default-hover-backgroundColor);
    opacity: var(--button-variants-default-hover-backgroundColor-opacity);
  }

  &:active {
    background-color: var(--semantic-color-action-background-primary-active);
  }
}

.button--variant-destructive {
  background-color: var(--button-variants-destructive-backgroundColor);
  color: var(--button-variants-destructive-color);

  &:hover {
    background-color: var(--semantic-color-action-background-danger-hover);
  }

  &:active {
    background-color: var(--semantic-color-action-background-danger-active);
  }

  &:focus-visible {
    box-shadow: 0 0 0 3px rgba(var(--semantic-color-feedback-foreground-danger-default), 0.2);

    .dark & {
      box-shadow: 0 0 0 3px rgba(var(--semantic-color-feedback-foreground-danger-default), 0.4);
    }
  }
}

.button--variant-outline {
  background-color: var(--button-variants-outline-backgroundColor);
  border: 1px solid var(--button-variants-outline-borderColor);
  box-shadow: var(--semantic-elevation-default);

  &:hover {
    background-color: var(--semantic-color-action-background-secondary-hover);
    color: var(--semantic-color-action-foreground-secondary-default);
    border-color: var(--semantic-color-action-border-secondary-hover);
  }

  &:active {
    background-color: var(--semantic-color-action-background-secondary-active);
  }

  .dark & {
    background-color: var(--semantic-color-action-background-secondary-default);
    border-color: var(--semantic-color-action-border-secondary-default);

    &:hover {
      background-color: var(--semantic-color-action-background-secondary-hover);
    }
  }
}

.button--variant-secondary {
  background-color: var(--button-variants-secondary-backgroundColor);
  color: var(--button-variants-secondary-color);

  &:hover {
    background-color: var(--semantic-color-action-background-secondary-hover);
  }

  &:active {
    background-color: var(--semantic-color-action-background-secondary-active);
  }
}

.button--variant-ghost {
  &:hover {
    background-color: var(--semantic-color-action-background-secondary-hover);
    color: var(--semantic-color-action-foreground-secondary-default);

    .dark & {
      background-color: var(--semantic-color-action-background-secondary-hover);
    }
  }
}

.button--variant-link {
  color: var(--semantic-color-action-background-primary-default);
  text-decoration: underline;
  text-underline-offset: 2px;
  text-decoration-thickness: 1px;
  text-decoration-color: var(--semantic-link-decoration-color);

  &:hover {
    text-decoration-color: var(--semantic-link-hover-text);
  }
}
