// Badge component styles
// Migrated from Tailwind to SCSS with design tokens

// Import generated token variables
@use './Badge.tokens.generated.scss' as badgeTokens;

.badge {
  // Include the generated variables mixin within the component scope
  @include badgeTokens.vars;
  // Base badge styles (equivalent to inline-flex items-center justify-center rounded-md border px-2 py-var(--semantic-opacity-disabled) text-xs font-medium w-fit whitespace-nowrap shrink-0)
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--badge-borderRadius); // equivalent to rounded-md
  border: var(--badge-border-width) var(--badge-border-style) transparent; // equivalent to border
  padding: var(--badge-padding-vertical) var(--badge-padding-horizontal); // equivalent to px-2 py-var(--semantic-opacity-disabled)
  font-size: var(--badge-fontSize); // equivalent to text-xs
  font-weight: var(--badge-fontWeight); // equivalent to font-medium
  width: fit-content; // equivalent to w-fit
  white-space: nowrap; // equivalent to whitespace-nowrap
  flex-shrink: 0; // equivalent to shrink-0

  // SVG icon styles (equivalent to [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none)
  svg {
    width: var(--badge-icon-size); // equivalent to size-3
    height: var(--badge-icon-size);
    flex-shrink: 0;
    pointer-events: none;
  }

  gap: var(--badge-gap); // equivalent to gap-1

  // Focus visible styles (equivalent to focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px])
  &:focus-visible {
    border-color: var(--semantic-color-action-border-primary-focus);
    box-shadow: var(--badge-focus-ring);
  }

  // Invalid state (equivalent to aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive)
  &[aria-invalid="true"] {
    box-shadow: var(--badge-focus-ring);
    border-color: var(--semantic-color-action-background-danger-default);

    .dark & {
      box-shadow: var(--badge-focus-ring);
    }
  }

  // Transition (equivalent to transition-[color,box-shadow])
  transition: color var(--badge-transition-duration) var(--badge-transition-easing), box-shadow var(--badge-transition-duration) var(--badge-transition-easing);

  // Overflow (equivalent to overflow-hidden)
  overflow: hidden;
}

// Variant styles
.badge--variant-default {
  // Default variant (equivalent to border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90)
  border-color: var(--badge-variants-default-borderColor);
  background-color: var(--badge-variants-default-backgroundColor);
  color: var(--badge-variants-default-color);

  // Link hover styles
  &[href]:hover {
    background-color: var(--badge-variants-default-hover-backgroundColor);
    opacity: var(--badge-variants-default-hover-backgroundColor-opacity);
  }
}

.badge--variant-secondary {
  // Secondary variant (equivalent to border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90)
  border-color: var(--badge-variants-secondary-borderColor);
  background-color: var(--badge-variants-secondary-backgroundColor);
  color: var(--badge-variants-secondary-color);

  // Link hover styles
  &[href]:hover {
    background-color: var(--badge-variants-secondary-hover-backgroundColor);
    opacity: var(--badge-variants-secondary-hover-backgroundColor-opacity);
  }
}

.badge--variant-destructive {
  // Destructive variant (equivalent to border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60)
  border-color: var(--badge-variants-destructive-borderColor);
  background-color: var(--badge-variants-destructive-backgroundColor);
  color: var(--badge-variants-destructive-color);

  // Link hover styles
  &[href]:hover {
    background-color: var(--badge-variants-destructive-hover-backgroundColor);
    opacity: var(--badge-variants-destructive-hover-backgroundColor-opacity);
  }

  // Focus visible override
  &:focus-visible {
    box-shadow: var(--badge-focus-ring);

    .dark & {
      box-shadow: var(--badge-focus-ring);
    }
  }

  // Dark mode background
  .dark & {
    background-color: var(--badge-variants-destructive-dark-backgroundColor);
    opacity: var(--badge-variants-destructive-dark-backgroundColor-opacity);
  }
}

.badge--variant-outline {
  // Outline variant (equivalent to text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground)
  color: var(--badge-variants-outline-color);

  // Link hover styles
  &[href]:hover {
    background-color: var(--badge-variants-outline-hover-backgroundColor);
    color: var(--core-color-display-foreground-primary);
  }
}