{
  "name": "@paths-design/vscode-ext",
  "version": "0.1.0",
  "description": "VS Code extension for Designer - local-first design tool",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "scripts": {
    "build": "node esbuild.config.js",
    "build:webview": "node esbuild.config.js --webview-only",
    "watch": "node esbuild.config.js --watch",
    "watch:webview": "node esbuild.config.js --watch --webview-only",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:coverage": "vitest run --coverage",
    "lint": "eslint src --ext .ts",
    "lint:webviews": "eslint webviews --ext .ts,.tsx",
    "typecheck": "tsc --noEmit",
    "typecheck:webviews": "tsc --noEmit -p tsconfig.webviews.json",
    "check": "npm run typecheck && npm run typecheck:webviews && npm run lint && npm run lint:webviews",
    "check:watch": "npm run check",
    "dev": "npm run dev:check",
    "dev:check": "node dev-helper.js && npm run build:webview",
    "dev:helper": "node dev-helper.js",
    "dev:quick": "npm run build:webview",
    "prebuild": "npm run check",
    "prebuild:webview": "npm run check"
  },
  "dependencies": {
    "@paths-design/canvas-engine": "workspace:*",
    "@paths-design/canvas-renderer-dom": "workspace:*",
    "@paths-design/canvas-schema": "workspace:*",
    "@paths-design/component-indexer": "workspace:*",
    "@paths-design/design-system": "workspace:*",
    "@paths-design/properties-panel": "workspace:*",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "lucide-react": "^0.544.0",
    "next-themes": "^0.4.6",
    "react": "^19",
    "react-dom": "^19",
    "tailwind-merge": "^3.3.1",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@types/node": "^20.10.0",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@types/vscode": "^1.84.0",
    "@vitest/coverage-v8": "^1.0.4",
    "esbuild": "^0.19.0",
    "typescript": "^5.3.3",
    "vitest": "^1.0.4"
  },
  "engines": {
    "vscode": "^1.84.0"
  },
  "activationEvents": [
    "onCommand:designer.createCanvasDocument",
    "onCommand:designer.openCanvas",
    "onCommand:designer.viewCanvasSource",
    "onCommand:designer.createComponentLibrary",
    "onCommand:designer.createComponentFromSelection",
    "onCommand:designer.showComponentLibrary",
    "onCommand:designer.showKeyboardShortcuts",
    "onCommand:designer.showPerformanceMetrics",
    "onCommand:designer.togglePerformanceBudget",
    "onCommand:designer.openPropertiesPanel",
    "onCommand:designer.toggleSelectionMode",
    "onCommand:designer.setSelectionModeRectangle",
    "onCommand:designer.setSelectionModeLasso",
    "onCommand:designer.setSelectionModeSingle",
    "onCommand:designer.showSelectionState",
    "onCommand:designer.copySelectionJSON",
    "onCommand:designer.quickPickSelection",
    "onCommand:designer.quickToggleSelectionMode",
    "onCommand:designer.clearSelectionHistory",
    "onCommand:designer.zoomIn",
    "onCommand:designer.zoomOut",
    "onCommand:designer.zoomFit",
    "onCommand:designer.toggleGrid",
    "onCommand:designer.toggleSnap",
    "onCommand:designer.undo",
    "onCommand:designer.redo",
    "onCommand:designer.saveDocument",
    "onCommand:designer.switchToCanvasView",
    "onCommand:designer.switchToCodeView",
    "onCommand:designer.getFonts",
    "onView:designer.propertiesPanel"
  ],
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "designer",
          "title": "Designer",
          "icon": "$(paintcan)"
        }
      ]
    },
    "views": {
      "designer": [
        {
          "type": "webview",
          "id": "designer.propertiesPanel",
          "name": "Properties",
          "when": "workspaceHasCanvasFiles"
        }
      ]
    },
    "commands": [
      {
        "command": "designer.createCanvasDocument",
        "title": "New Canvas Document",
        "icon": "$(add)"
      },
      {
        "command": "designer.openCanvas",
        "title": "Open in Canvas Designer",
        "icon": "$(paintcan)"
      },
      {
        "command": "designer.viewCanvasSource",
        "title": "View Canvas Source"
      },
      {
        "command": "designer.createComponentLibrary",
        "title": "Create Component Library"
      },
      {
        "command": "designer.createComponentFromSelection",
        "title": "Create Component from Selection",
        "when": "designer.canvasViewActive && designer.selectionActive"
      },
      {
        "command": "designer.showComponentLibrary",
        "title": "Show Component Library"
      },
      {
        "command": "designer.showKeyboardShortcuts",
        "title": "Show Keyboard Shortcuts"
      },
      {
        "command": "designer.showPerformanceMetrics",
        "title": "Show Performance Metrics"
      },
      {
        "command": "designer.togglePerformanceBudget",
        "title": "Toggle Performance Budget Monitoring"
      },
      {
        "command": "designer.openPropertiesPanel",
        "title": "Open Properties Panel"
      },
      {
        "command": "designer.toggleSelectionMode",
        "title": "Toggle Selection Mode"
      },
      {
        "command": "designer.setSelectionModeRectangle",
        "title": "Set Selection Mode: Rectangle"
      },
      {
        "command": "designer.setSelectionModeLasso",
        "title": "Set Selection Mode: Lasso"
      },
      {
        "command": "designer.setSelectionModeSingle",
        "title": "Set Selection Mode: Single"
      },
      {
        "command": "designer.showSelectionState",
        "title": "Designer: Show Selection State"
      },
      {
        "command": "designer.copySelectionJSON",
        "title": "Designer: Copy Selection as JSON"
      },
      {
        "command": "designer.quickPickSelection",
        "title": "Designer: Quick Pick Selection"
      },
      {
        "command": "designer.quickToggleSelectionMode",
        "title": "Designer: Toggle Selection Mode (Quick Pick)"
      },
      {
        "command": "designer.clearSelectionHistory",
        "title": "Designer: Clear Selection History"
      },
      {
        "command": "designer.zoomIn",
        "title": "Zoom In",
        "icon": "$(zoom-in)"
      },
      {
        "command": "designer.zoomOut",
        "title": "Zoom Out",
        "icon": "$(zoom-out)"
      },
      {
        "command": "designer.zoomFit",
        "title": "Fit to Screen",
        "icon": "$(screen-full)"
      },
      {
        "command": "designer.toggleGrid",
        "title": "Toggle Grid",
        "icon": "$(grid)"
      },
      {
        "command": "designer.toggleSnap",
        "title": "Toggle Snap to Grid",
        "icon": "$(magnet)"
      },
      {
        "command": "designer.undo",
        "title": "Undo",
        "icon": "$(arrow-left)"
      },
      {
        "command": "designer.redo",
        "title": "Redo",
        "icon": "$(arrow-right)"
      },
      {
        "command": "designer.saveDocument",
        "title": "Save Document",
        "icon": "$(save)"
      },
      {
        "command": "designer.switchToCanvasView",
        "title": "Canvas View"
      },
      {
        "command": "designer.switchToCodeView",
        "title": "Code View"
      }
    ],
    "keybindings": [
      {
        "command": "designer.toggleSelectionMode",
        "key": "ctrl+shift+s",
        "mac": "cmd+shift+s",
        "when": "designer.canvasViewActive"
      },
      {
        "command": "designer.setSelectionModeRectangle",
        "key": "r",
        "when": "designer.canvasViewActive"
      },
      {
        "command": "designer.setSelectionModeLasso",
        "key": "l",
        "when": "designer.canvasViewActive"
      },
      {
        "command": "designer.setSelectionModeSingle",
        "key": "v",
        "when": "designer.canvasViewActive"
      },
      {
        "command": "designer.zoomIn",
        "key": "ctrl+=",
        "mac": "cmd+=",
        "when": "designer.canvasViewActive"
      },
      {
        "command": "designer.zoomOut",
        "key": "ctrl+-",
        "mac": "cmd+-",
        "when": "designer.canvasViewActive"
      },
      {
        "command": "designer.zoomFit",
        "key": "ctrl+0",
        "mac": "cmd+0",
        "when": "designer.canvasViewActive"
      },
      {
        "command": "designer.undo",
        "key": "ctrl+z",
        "mac": "cmd+z",
        "when": "designer.canvasViewActive"
      },
      {
        "command": "designer.redo",
        "key": "ctrl+y",
        "mac": "cmd+y",
        "when": "designer.canvasViewActive"
      },
      {
        "command": "designer.saveDocument",
        "key": "ctrl+s",
        "mac": "cmd+s",
        "when": "designer.canvasViewActive"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "designer.createCanvasDocument",
          "when": "workspaceFolderCount != 0",
          "category": "Designer"
        },
        {
          "command": "designer.openCanvas",
          "when": "workspaceFolderCount != 0",
          "category": "Designer"
        },
        {
          "command": "designer.viewCanvasSource",
          "when": "resourceExtname == .json && resourceFilename =~ /\\.canvas\\.json$/",
          "category": "Designer"
        },
        {
          "command": "designer.createComponentLibrary",
          "when": "workspaceFolderCount != 0",
          "category": "Designer"
        },
        {
          "command": "designer.createComponentFromSelection",
          "when": "workspaceFolderCount != 0",
          "category": "Designer"
        },
        {
          "command": "designer.showComponentLibrary",
          "when": "workspaceFolderCount != 0",
          "category": "Designer"
        },
        {
          "command": "designer.showKeyboardShortcuts",
          "when": "workspaceFolderCount != 0",
          "category": "Designer"
        },
        {
          "command": "designer.showPerformanceMetrics",
          "when": "workspaceFolderCount != 0",
          "category": "Designer"
        },
        {
          "command": "designer.togglePerformanceBudget",
          "when": "workspaceFolderCount != 0",
          "category": "Designer"
        }
      ],
      "explorer/context": [
        {
          "command": "designer.createCanvasDocument",
          "group": "navigation"
        },
        {
          "command": "designer.openCanvas",
          "when": "resourceExtname == .json && resourceFilename =~ /\\.canvas\\.json$/",
          "group": "navigation"
        }
      ],
      "editor/title": [
        {
          "command": "designer.openCanvas",
          "when": "resourceExtname == .json && resourceFilename =~ /\\.canvas\\.json$/",
          "group": "navigation"
        },
        {
          "command": "designer.viewCanvasSource",
          "when": "resourceExtname == .json && resourceFilename =~ /\\.canvas\\.json$/",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "Designer",
      "properties": {
        "designer.selectionModes.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable advanced selection modes (rectangle, lasso)"
        },
        "designer.selectionModes.default": {
          "type": "string",
          "enum": [
            "single",
            "rectangle",
            "lasso"
          ],
          "default": "single",
          "description": "Default selection mode when opening canvas"
        },
        "designer.accessibility.announceSelectionChanges": {
          "type": "boolean",
          "default": true,
          "description": "Announce selection changes to screen readers"
        },
        "designer.webview.autoInitialize": {
          "type": "boolean",
          "default": true,
          "description": "Automatically initialize empty or invalid canvas documents with default structure"
        },
        "designer.performance.enableBudgetMonitoring": {
          "type": "boolean",
          "default": true,
          "description": "Enable performance budget monitoring and warnings for large documents"
        },
        "designer.performance.memoryBudgetMB": {
          "type": "number",
          "default": 100,
          "minimum": 10,
          "maximum": 1000,
          "description": "Memory budget in MB for canvas operations (affects performance warnings)"
        },
        "designer.performance.maxNodesPerDocument": {
          "type": "number",
          "default": 10000,
          "minimum": 100,
          "maximum": 100000,
          "description": "Maximum recommended nodes per document (performance threshold)"
        },
        "designer.achievements.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable achievement notifications for usage milestones"
        },
        "designer.shortcuts.showOnStartup": {
          "type": "boolean",
          "default": true,
          "description": "Show keyboard shortcuts guide on extension startup"
        }
      }
    }
  }
}
